//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEB.Host.TransactionServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransactionServiceReference.ITransactionBO")]
    public interface ITransactionBO {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOOf_Transaction/Save", ReplyAction="http://tempuri.org/IBOOf_Transaction/SaveResponse")]
        TO.Model.Transaction Save(TO.Model.Transaction to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOOf_Transaction/Save", ReplyAction="http://tempuri.org/IBOOf_Transaction/SaveResponse")]
        System.Threading.Tasks.Task<TO.Model.Transaction> SaveAsync(TO.Model.Transaction to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOOf_Transaction/Delete", ReplyAction="http://tempuri.org/IBOOf_Transaction/DeleteResponse")]
        void Delete(TO.Model.Transaction to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOOf_Transaction/Delete", ReplyAction="http://tempuri.org/IBOOf_Transaction/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(TO.Model.Transaction to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOOf_Transaction/SelectAllList", ReplyAction="http://tempuri.org/IBOOf_Transaction/SelectAllListResponse")]
        TO.Model.Transaction[] SelectAllList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOOf_Transaction/SelectAllList", ReplyAction="http://tempuri.org/IBOOf_Transaction/SelectAllListResponse")]
        System.Threading.Tasks.Task<TO.Model.Transaction[]> SelectAllListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOOf_Transaction/SelectList", ReplyAction="http://tempuri.org/IBOOf_Transaction/SelectListResponse")]
        TO.Model.Transaction[] SelectList(TO.Model.Transaction to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOOf_Transaction/SelectList", ReplyAction="http://tempuri.org/IBOOf_Transaction/SelectListResponse")]
        System.Threading.Tasks.Task<TO.Model.Transaction[]> SelectListAsync(TO.Model.Transaction to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOOf_Transaction/SelectID", ReplyAction="http://tempuri.org/IBOOf_Transaction/SelectIDResponse")]
        TO.Model.Transaction SelectID(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOOf_Transaction/SelectID", ReplyAction="http://tempuri.org/IBOOf_Transaction/SelectIDResponse")]
        System.Threading.Tasks.Task<TO.Model.Transaction> SelectIDAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOOf_Transaction/Select", ReplyAction="http://tempuri.org/IBOOf_Transaction/SelectResponse")]
        TO.Model.Transaction Select(TO.Model.Transaction to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOOf_Transaction/Select", ReplyAction="http://tempuri.org/IBOOf_Transaction/SelectResponse")]
        System.Threading.Tasks.Task<TO.Model.Transaction> SelectAsync(TO.Model.Transaction to);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransactionBOChannel : WEB.Host.TransactionServiceReference.ITransactionBO, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransactionBOClient : System.ServiceModel.ClientBase<WEB.Host.TransactionServiceReference.ITransactionBO>, WEB.Host.TransactionServiceReference.ITransactionBO {
        
        public TransactionBOClient() {
        }
        
        public TransactionBOClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransactionBOClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionBOClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionBOClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TO.Model.Transaction Save(TO.Model.Transaction to) {
            return base.Channel.Save(to);
        }
        
        public System.Threading.Tasks.Task<TO.Model.Transaction> SaveAsync(TO.Model.Transaction to) {
            return base.Channel.SaveAsync(to);
        }
        
        public void Delete(TO.Model.Transaction to) {
            base.Channel.Delete(to);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(TO.Model.Transaction to) {
            return base.Channel.DeleteAsync(to);
        }
        
        public TO.Model.Transaction[] SelectAllList() {
            return base.Channel.SelectAllList();
        }
        
        public System.Threading.Tasks.Task<TO.Model.Transaction[]> SelectAllListAsync() {
            return base.Channel.SelectAllListAsync();
        }
        
        public TO.Model.Transaction[] SelectList(TO.Model.Transaction to) {
            return base.Channel.SelectList(to);
        }
        
        public System.Threading.Tasks.Task<TO.Model.Transaction[]> SelectListAsync(TO.Model.Transaction to) {
            return base.Channel.SelectListAsync(to);
        }
        
        public TO.Model.Transaction SelectID(long id) {
            return base.Channel.SelectID(id);
        }
        
        public System.Threading.Tasks.Task<TO.Model.Transaction> SelectIDAsync(long id) {
            return base.Channel.SelectIDAsync(id);
        }
        
        public TO.Model.Transaction Select(TO.Model.Transaction to) {
            return base.Channel.Select(to);
        }
        
        public System.Threading.Tasks.Task<TO.Model.Transaction> SelectAsync(TO.Model.Transaction to) {
            return base.Channel.SelectAsync(to);
        }
    }
}
